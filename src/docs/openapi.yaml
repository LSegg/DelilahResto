openapi: '3.0.2'
info:
  title: "Delilah Resto API"
  description: "Online Restaurant RESTful API"
  version: "1.0.0"
  license:
    name: "MIT License"
servers:
  - url: "http://testing.delilahresto.com"
    description: "Basic testing scenario"
  - url: "http://api.delilahresto.com"
    description: "Production testing scenario"
paths:
  /login:
    post:
      tags:
      - login
      operationId: login
      summary: "Login to user account"
      description: "Allows an user to log into their account if they are a registered user"
      responses:
        "200":
          description: "Request sucessful"
        "401":
          description: "Unauthorized"
      security: []
  /products:
    get:
      tags: 
      - products
      operationId: getAvailableProducts
      summary: "Get all products"
      description: "It returns all the products available in the database in JSON format"
      responses:
        500:
          description: "Internal server error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - An internal server error ocurred, please try again later.
        200:
          description: "Request has succeeded."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/menu"
    post:
      summary: "Create a new menu item"
      description: "This method posts a new menu item and accept application/JSON format for the operation with 'name', 'price', 'stock' and 'itemId' as the required parameters for the JSON."
      responses:
        201:
          description: "Request has succeeded and a new menu item has been created as a result."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/menuItem"
    put:
      summary: "Modify a menu item"
      description: "This method modifies an existing menu item and accept application/JSON format for the operation with the parameters to modify required for the JSON."
      responses:
        200:
          description: "Request has succeeded."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/menuItem"
    delete:
      summary: "Modify a menu item"
      description: "This method deletes the given menu item if the item_id exists."
      responses:
        200:
          description: "Request has succeeded."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/menu"
  /signup:
    summary: "Create a new user"
  /teapot:
    get:
      tags: 
      - teapot
      operationId: getTeapot
      summary: "Get Teapot"
      description: "It returns all the products available in the database in JSON format"
      responses:
        418:
          description: "I'm a teapot."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - We cannot brew coffee since we are teapots.
components:
  schemas:
    menu:
      type: array
      items:
        $ref: "#/components/schemas/menuItem"
    menuItem:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        stock:
          type: integer
        itemId:
          type: string